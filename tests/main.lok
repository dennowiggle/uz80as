0001   0000             ; ===========================================================================
0002   0000             ; uz80as, a macro assembler for Z80 based microprocessors.
0003   0000             ; ===========================================================================
0004   0000             
0005   0000             ; All this file must equal the TASM output
0006   0000             
0007   0000             	.org 0
0008   0000             
0009   0000             ; ----------------
0010   0000             ; Test expressions
0011   0000             ; ----------------
0012   0000             
0013   0000             ; This additionally tests a db that must span 3 lines in the lst file.
0014   0000             
0015   0000 00 7F 80 FF 	.db 0, 127, 128, 255
0016   0004 00 FF 81 80 	.db 256,-1,-127,-128
0017   0008 01 00 FF    	.db -255, +0, +255
0018   000B 01 00 FF 01 	.db 1+256, +1+255, -1+256, +1-256
0019   000F 01 FF       	.db 1-256, -1-256
0020   0011 06 FA FA 06 	.db 2*3, 2*(-3), -2*3, -2*(-3)
0021   0015             
0022   0015             ; tasm fails for these
0023   0015             
0024   0015             ;	.db 2*-3, -2*-3
0025   0015             
0026   0015 FF 01 FF 01 	.db +-1, --1, ---1, +--1
0027   0019             
0028   0019             ; tasm fails for this
0029   0019             
0030   0019             ;	.db -+1
0031   0019             ; 	.db 1/0
0032   0019             
0033   0019 16          	.db 5+7-3*5/2
0034   001A 00 00 00 01 	.db 0/256, 0*256, 0*0, 255/-1
0035   001E 00 00       	.db 0%5, 256%8
0036   0020             
0037   0020 01 00 00 01 	.db 5==5, 5!=5, 5==6, 5!=6, 5=5, 5=6
0037   0024 01 00 
0038   0026 00 00 01    	.db 5>5, 5>6, 6>5
0039   0029 00 01 00    	.db 5<5, 5<6, 6<5
0040   002C 01 00 01    	.db 5>=5, 5>=6, 6>=5
0041   002F 01 01 00    	.db 5<=5, 5<=6, 6<=5
0042   0032 00 00 01    	.db 5==-5, -5==5, -5==-5
0043   0035 00 00 01    	.db 5=-5, -5=5, -5=-5
0044   0038 01 01 00    	.db 5!=-5, -5!=5, -5!=-5
0045   003B 01 00 00    	.db 5>-5, -5>5, -5>-5
0046   003E 00 01 00    	.db 5<-5, -5<5, -5<-5
0047   0041 00 01 01    	.db 5<=-5, -5<=5, -5<=-5
0048   0044 01 00 01    	.db 5>=-5, -5>=5, -5>=-5
0049   0047 05 04 05 07 	.db 5&5, 5&6, 5|5, 5|6, 5^5, 5^6
0049   004B 00 03 
0050   004D 7F 01 00 01 	.db 255>>1, 255>>7, 255>>8, 256>>8
0051   0051 02 80 00 00 	.db 1<<1, 1<<7, 1<<8, 255<<8
0052   0055 01 01 00 00 	.db 1>>0, 1<<0, 1>>-1, 1<<-1
0053   0059 FF FE 00 FF 	.db ~0, ~1, ~255, ~256
0054   005D 0A          	.db 1+(1+(1+(1+(1+(1+(1+(1+(1+(1)))))))))
0055   005E 00          	.db 1-(1+(1-(1+(1-(1+(1-(1+(1-(1)))))))))
0056   005F             
0057   005F             ; More shifting.
0058   005F             
0059   005F             	;       1      30      31      0       1
0060   005F FF FF FF FF 	.db -1>>1, -1>>30, -1>>31, -1>>32, -1>>33
0060   0063 FF 
0061   0064             
0062   0064             	;              1             30             31
0063   0064 FF 01 00    	.db $7FFFFFFF>>1, $7FFFFFFF>>30, $7FFFFFFF>>31
0064   0067             
0065   0067             	; These two give $FF for TASM on Linux 64 bits (long is 64 bits)
0066   0067             	; They must be 0 since we say that we use 32 bit integers.
0067   0067                     ;              0              1
0068   0067             	; .db $7FFFFFFF>>32, $7FFFFFFF>>33
0069   0067             
0070   0067             	;       31      2        0        0        31
0071   0067 FF FF FF FF 	.db -1>>-1, -1>>-30, -1>>-31, -1>>-32, -1>>-33
0071   006B FF 
0072   006C             
0073   006C             	;              31             31
0074   006C 00 00       	.db $7FFFFFFF>>-1, $7FFFFFFF>>-33
0075   006E             
0076   006E             	; These two give $FF for TASM on Linux 64 bits (long is 64 bits)
0077   006E             	; They must be 0 since we say that we use 32 bit integers.
0078   006E             	;              2               0                   0
0079   006E             	; .db $7FFFFFFF>>-30, $7FFFFFFF>>-31, $7FFFFFFF>>-32
0080   006E             
0081   006E FF FF 01 01 	.db -1>>0, -1<<0, 1>>0, 1<<0
0082   0072             
0083   0072             ; Prefixes and suffixes
0084   0072             
0085   0072 00 00 00    	.db %0, 0b, 0B
0086   0075 01 01 01    	.db %1, 1b, 1B
0087   0078 00 00 00    	.db %00000000, 00000000b, 00000000B
0088   007B FF FF FF    	.db %11111111, 11111111b, 11111111B
0089   007E FF FF FF    	.db %111111111, 111111111b, 111111111B
0090   0081 AA AA AA    	.db %10101010, 10101010b, 10101010B
0091   0084             
0092   0084 00 00 00    	.db @0, 0o, 0O
0093   0087 01 01 01    	.db @1, 1o, 1O
0094   008A FF FF FF    	.db @377, 377o, 377O
0095   008D 3F 3F 3F    	.db @477, 477o, 477O
0096   0090 62 62 62    	.db @142, 142o, 142O
0097   0093             
0098   0093 00 00 01 01 	.db 0d, 0D, 1d, 1D
0099   0097 FF FF 00 00 	.db 255d, 255D, 256d, 256D
0100   009B FF FF 80 80 	.db -1d, -1D, -128d, -128D
0101   009F             
0102   009F 00 00 00    	.db $0, 0h, 0H
0103   00A2 01 01 01    	.db $1, 1h, 1H
0104   00A5 FF FF FF FF 	.db $ff, $FF, 0ffh, 0FFH
0105   00A9 FF FF 00    	.db 0ffH, 0FFh, $100
0106   00AC 00 00       	.db 100h, 100H
0107   00AE 1E E1       	.db 1eH, 0E1h
0108   00B0             
0109   00B0 01 01       	.db 3%2, 3%%10
0110   00B2 4D 00       	.db 255-$, 255-$ff
0111   00B4             
0112   00B4             ; DW, WORD
0113   00B4             
0114   00B4 00 00 FF 00 	.dw 0, 255, -255, 256
0114   00B8 01 FF 00 01 
0115   00BC 7F 00 80 00 	.dw 127, 128, -127, -128
0115   00C0 81 FF 80 FF 
0116   00C4 FF FF 00 00 	.dw 65535, 65536, -1, -65536
0116   00C8 FF FF 00 00 
0117   00CC FF FF FF 7F 	.dw -65537, 32767, 32768, -32767
0117   00D0 00 80 01 80 
0118   00D4 00 80       	.word -32768
0119   00D6 30 00 09 00 	.dw '0', '9'-'0', 'z'-'a', 'Z'-'A'
0119   00DA 19 00 19 00 
0120   00DE             
0121   00DE             ; BLOCK
0122   00DE             
0123   00DE             	.block -1
0124   00DD             	.block 1
0125   00DE             	.block 1
0126   00DF 02          	.db 2
0127   00E0             	.block -2
0128   00DE             	.block 2
0129   00E0             
0130   00E0             ; BYTE
0131   00E0             
0132   00E0 00 01 FF 00 	.byte 0, 1, 255, 256
0133   00E4 FF 80       	.byte -1, -128
0134   00E6             
0135   00E6             ; CODES, NOCODES
0136   00E6             
	.nocodes

; Printed as is --------

; Comment column 0

	.db 0, 1, 2, 3

; ----------------------

0147   00EA             	.codes
0148   00EA             
0149   00EA             ; Printed after line number, etc.
0150   00EA             
0151   00EA             ; ECHO accepted.
0152   00EA             
0153   00EA             	.echo "This is a string "
0154   00EA             	.echo 127+1
0155   00EA             	.echo " concatenated.\n"
0156   00EA             
0157   00EA             ; FILL .
0158   00EA             
0159   00EA             	.fill 0, 1
0160   00EA             	.fill 0, -1
0161   00EA             	.fill 0
0162   00EA 01          	.fill 1, 1
0163   00EB FF          	.fill 1, -1
0164   00EC FF          	.fill 1
0165   00ED FF FF       	.fill 2
0166   00EF FF FF FF    	.fill 3
0167   00F2 FF FF FF FF 	.fill 4
0168   00F6 FF FF FF FF 	.fill 5
0168   00FA FF 
0169   00FB FF FF FF FF 	.fill 6
0169   00FF FF FF 
0170   0101 FF FF FF FF 	.fill 7
0170   0105 FF FF FF 
0171   0108 FF FF FF FF 	.fill 8
0171   010C FF FF FF FF 
0172   0110 FF FF FF FF 	.fill 9
0172   0114 FF FF FF FF 
0172   0118 FF 
0173   0119             
0174   0119             ; LIST, NOLIST
0175   0119             
0180   0119             	.list
0181   0119             
0182   0119             ; This appears.
0183   0119             
0184   0119             ; LSFIRST, MSFIRST
0185   0119             
0186   0119 34 12       	.word $1234
0187   011B             	.msfirst
0188   011B 12 34       	.word $1234
0189   011D             	.lsfirst
0190   011D 34 12       	.word $1234
0191   011F             
0192   011F             ; ORG simple.
0193   011F             
0194   011F             	.org $
0195   0120             	.org $+1
0196   011F             	.org $-1
0197   0120             	.org *+1
0198   011F             	.org *-1
0199   011F             
0200   011F             ; ORG forms.
0201   011F             
0202   0120             *=$+1
0203   0121             $=*+1
0204   0122             	*=*+1
0205   0123             	$=$+1
0206   0124             	$= $+1
0207   0125             	*= *+1
0208   0125             
0209   0125 80          	.db 128
0210   0126             
0211   0126             ; Testing * (current program counter) and multiply operator
0212   0126             
0213   0126 4C          	.db **2
0214   0127             
0215   0127             ; Not correctly parsed by TASM.
0216   0127             
0217   0127             ;	.db ***
0218   0127             ;	.db 2**
0219   0127             
0220   0127             ; Test label in org: must take value after the org.
0221   0127             
0222   0127             orglab
0223   01A6             orglab1	.org $+127
0224   01A6 A6 01       orglab2	.dw orglab1
0225   01A8             orglab3
0226   01A9             orglab4 .org $+1
0227   01A9 27 01       	.dw orglab
0228   01AB A8 01       	.dw orglab3
0229   01AD A9 01       	.dw orglab4
0230   01AF             
0231   01AF             ; EQU
0232   01AF             
0233   01AF             label1		.equ 1
0234   01AF             label2:		.equ 2
0235   01AF             label3_		.equ 3
0236   01AF             label4_:	.equ 4
0237   01AF             label5		=5
0238   01AF             label6:		=6
0239   01AF             label7_		=7
0240   01AF             label8_:	=8
0241   01AF             label9.		=9
0242   01AF             labela.:	=10
0243   01AF             labelb		= 11
0244   01AF             
0245   01AF             ; PAGE/NOPAGE
0246   01AF             
0247   01AF             ; TEXT
0248   01AF             
0249   01AF 0A 0D 08 09 	.text "\n\r\b\t\f\\\""
0249   01B3 0C 5C 22 
0250   01B6 61 7A 41 5A 	.text "azAZ09"
0250   01BA 30 39 
0251   01BC 00 FF 5D    	.text "\000\377\135"
0252   01BF             
0253   01BF             ; DB, DW with text.
0254   01BF             
0255   01BF             	
0256   01BF 0A 0D 08 09 	.db "\n\r\b\t\f\\\""
0256   01C3 0C 5C 22 
0257   01C6 61 7A 41 5A 	.db "azAZ09"
0257   01CA 30 39 
0258   01CC 00 FF 5D    	.db "\000\377\135"
0259   01CF 0A 00 0D 00 	.dw "\n\r\b\t\f\\\""
0259   01D3 08 00 09 00 
0259   01D7 0C 00 5C 00 
0259   01DB 22 00 
0260   01DD 61 00 7A 00 	.dw "azAZ09"
0260   01E1 41 00 5A 00 
0260   01E5 30 00 39 00 
0261   01E9 00 00 5D 00 	.dw "\000\135"
0262   01ED 48 69 01 02 	.db "Hi", 1, 2, "Bye"
0262   01F1 42 79 65 
0263   01F4 48 00 69 00 	.dw "Hi", 1, 2, "Bye"
0263   01F8 01 00 02 00 
0263   01FC 42 00 79 00 
0263   0200 65 00 
0264   0202             
0265   0202             ; This gives a different result in TASM.
0266   0202             
0267   0202             ;	.dw "\377"
0268   0202             
0269   0202             ; Mixed case directives.
0270   0202             
0271   0202 00          	.dB 0
0272   0203 01          	.Db 1
0273   0204             
0274   0204             ; Directives in column 0.
0275   0204             
0276   0204 02          .db 2
0277   0205 03          .dB 3
0278   0206 04          .DB 4
0279   0207             
0280   0207             ; Label names.
0281   0207             
0282   0207             _
0283   0207             L
0284   0207             _L9._
0285   0207             LL9._
0286   0207             la9._
0287   0207             l
0288   0207             
0289   0207             ; Line configurations.
0290   0207             
0291   0207             ; comment
0292   0207             	; comment
0293   0207             ;
0294   0207             	;
0295   0207             L10
0296   0207 00          L11	.db 0
0297   0208             L12	;comment
0298   0208 00          L13.db	.db 0
0299   0209             L14
0300   0209 00          L15	.db 0	; comment
0301   020A 00          L16	.db 0;comment
0302   020B             P10:
0303   020B 00          P11:	.db 0
0304   020C             P12:	;comment
0305   020C 00          P13.db:	.db 0
0306   020D             P14:
0307   020D 00          P15:	.db 0	; comment
0308   020E 00          P16:	.db 0;comment
0309   020F             
0310   020F             ; This should fail if uncommented.
0311   020F             
0312   020F             ;label12;comment
0313   020F             
0314   020F             ; Multiline scapes
0315   020F             
0316   020F 05          	.DB 5\ .DB 6\.DB 7
0316   0210 06          
0316   0211 07          
0317   0212             ML1	\ML2 .DB 1
0317   0212 01          
0318   0213             
0319   0213             ; Preprocessor
0320   0213             
0321   0213             #define Mm9._
0322   0213             #define _Mm9._
0323   0213             	#define MAC
0324   0213             ; #define MOC
0325   0213             #define ONE	1
0326   0213             #define TWO	(1+1)
0327   0213             
0328   0213             ; TASM allows for this
0329   0213             ; #define BAD%	3
0330   0213             ;	.db BAD%
0331   0213             
0332   0213             #define SUM1(n)	(n+ONE)
0333   0213             
0334   0213 06          	.db SUM1(5)
0335   0214             
0336   0214             #define MUL(a,b)	a * b
0337   0214             
0338   0214 1E          	.db MUL(5,6)
0339   0215             
0340   0215             #define VOID(a,b)
0341   0215             
0342   0215             VOID
0343   0215             VOID(5)
0344   0215             VOID(5,6)
0345   0215             
0346   0215             #define	ARG1(a,b,c)	a
0347   0215             
0348   0215 07          	.db ARG1(7)
0349   0216             
0350   0216             #define	ARG2(a,b,c)	b
0351   0216             
0352   0216 08          	.db ARG2(1,8)
0353   0217             
0354   0217             ; TASM doesn't allow _a, _7 _. for arguments
0355   0217             ; #define ALLOW(a,ab,_a,_7,_.)	a+ab+_a+_7+_.
0356   0217             ;	.db ALLOW(1,2,3,4,5)
0357   0217             
0358   0217             #define ALLOW(a,a7,a7b7)	a+a7+a7b7
0359   0217             
0360   0217 06          	.db ALLOW(1,2,3)
0361   0218 06          	.db ALLOW( 1 , 2 , 3 )
0362   0219             
0363   0219             #define CONT	5+
0364   0219             #defcont	6+
0365   0219             #defcont	7
0366   0219             
0367   0219 12          	.db CONT
0368   021A             
0369   021A             #define	MULTILINE	.DB 1\ .DB 2\
0370   021A             #defcont		.DB 3\
0371   021A             #defcont		.DB 4
0372   021A             
0373   021A 01          	MULTILINE
0373   021B 02          
0373   021C 03          
0373   021D 04          
0374   021E             
0375   021E             #define INCL
0376   021E             
0377   021E             #ifdef INCL
0378   021E 01          	.db 1
0379   021F             #endif
0380   021F~            #ifndef INCL
0381   021F~            	.db 2
0382   021F             #endif
0383   021F             #ifdef INCL
0384   021F 08          	.db 8
0385   0220~            #else
0386   0220~            	.db 16
0387   0220             #endif
0388   0220~            #ifndef INCL
0389   0220~            	.db 32
0390   0220             #else
0391   0220 40          	.db 64
0392   0221             #endif
0393   0221             
0394   0221~            #ifdef NINCL
0395   0221~            	.db 1
0396   0221             #endif
0397   0221             #ifndef NINCL
0398   0221 02          	.db 2
0399   0222             #endif
0400   0222~            #ifdef NINCL
0401   0222~            	.db 8
0402   0222             #else
0403   0222 10          	.db 16
0404   0223             #endif
0405   0223             #ifndef NINCL
0406   0223 20          	.db 32
0407   0224~            #else
0408   0224~            	.db 64
0409   0224             #endif
0410   0224             
0411   0224             #ifdef INCL
0412   0224~            	#ifdef NINCL
0413   0224~            		.db 1
0414   0224             	#else
0415   0224 02          		.db 2
0416   0225             	#endif
0417   0225             	#ifndef NINCL
0418   0225 04          		.db 4
0419   0226~            	#else
0420   0226~            		.db 8
0421   0226             	#endif
0422   0226~            #else
0423   0226~            	#ifdef NINCL
0424   0226~            		.db 16
0425   0226~            	#else
0426   0226~            		.db 32
0427   0226~            	#endif
0428   0226~            	#ifndef NINCL
0429   0226~            		.db 64
0430   0226~            	#else
0431   0226~            		.db 128
0432   0226~            	#endif
0433   0226             #endif
0434   0226             
0435   0226~            #ifndef INCL
0436   0226~            	#ifdef NINCL
0437   0226~            		.db 1
0438   0226~            	#else
0439   0226~            		.db 2
0440   0226~            	#endif
0441   0226~            	#ifndef NINCL
0442   0226~            		.db 4
0443   0226~            	#else
0444   0226~            		.db 8
0445   0226~            	#endif
0446   0226             #else
0447   0226~            	#ifdef NINCL
0448   0226~            		.db 16
0449   0226             	#else
0450   0226 20          		.db 32
0451   0227             	#endif
0452   0227             	#ifndef NINCL
0453   0227 40          		.db 64
0454   0228~            	#else
0455   0228~            		.db 128
0456   0228             	#endif
0457   0228             #endif
0458   0228             
0459   0228             prgend	.end	prgend
