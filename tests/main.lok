0001   0000             ; All this file must be correct
0002   0000             
0003   0000             	.org 0
0004   0000             
0005   0000             ; ----------------
0006   0000             ; Test expressions
0007   0000             ; ----------------
0008   0000             
0009   0000             ; This additionally tests a db that must span 3 lines in the lst file.
0010   0000             
0011   0000 00 7F 80 FF 	.db 0, 127, 128, 255
0012   0004 00 FF 81 80 	.db 256,-1,-127,-128
0013   0008 01 00 FF    	.db -255, +0, +255
0014   000B 01 00 FF 01 	.db 1+256, +1+255, -1+256, +1-256
0015   000F 01 FF       	.db 1-256, -1-256
0016   0011 06 FA FA 06 	.db 2*3, 2*(-3), -2*3, -2*(-3)
0017   0015             
0018   0015             ; tasm fails for these
0019   0015             
0020   0015             ;	.db 2*-3, -2*-3
0021   0015             
0022   0015 FF 01 FF 01 	.db +-1, --1, ---1, +--1
0023   0019             
0024   0019             ; tasm fails for this
0025   0019             
0026   0019             ;	.db -+1
0027   0019             ; 	.db 1/0
0028   0019             
0029   0019 16          	.db 5+7-3*5/2
0030   001A 00 00 00 01 	.db 0/256, 0*256, 0*0, 255/-1
0031   001E 00 00       	.db 0%5, 256%8
0032   0020             
0033   0020 01 00 00 01 	.db 5==5, 5!=5, 5==6, 5!=6, 5=5, 5=6
0033   0024 01 00 
0034   0026 00 00 01    	.db 5>5, 5>6, 6>5
0035   0029 00 01 00    	.db 5<5, 5<6, 6<5
0036   002C 01 00 01    	.db 5>=5, 5>=6, 6>=5
0037   002F 01 01 00    	.db 5<=5, 5<=6, 6<=5
0038   0032 00 00 01    	.db 5==-5, -5==5, -5==-5
0039   0035 00 00 01    	.db 5=-5, -5=5, -5=-5
0040   0038 01 01 00    	.db 5!=-5, -5!=5, -5!=-5
0041   003B 01 00 00    	.db 5>-5, -5>5, -5>-5
0042   003E 00 01 00    	.db 5<-5, -5<5, -5<-5
0043   0041 00 01 01    	.db 5<=-5, -5<=5, -5<=-5
0044   0044 01 00 01    	.db 5>=-5, -5>=5, -5>=-5
0045   0047 05 04 05 07 	.db 5&5, 5&6, 5|5, 5|6, 5^5, 5^6
0045   004B 00 03 
0046   004D 7F 01 00 01 	.db 255>>1, 255>>7, 255>>8, 256>>8
0047   0051 02 80 00 00 	.db 1<<1, 1<<7, 1<<8, 255<<8
0048   0055 01 01 00 00 	.db 1>>0, 1<<0, 1>>-1, 1<<-1
0049   0059 FF FE 00 FF 	.db ~0, ~1, ~255, ~256
0050   005D 0A          	.db 1+(1+(1+(1+(1+(1+(1+(1+(1+(1)))))))))
0051   005E 00          	.db 1-(1+(1-(1+(1-(1+(1-(1+(1-(1)))))))))
0052   005F             
0053   005F             ; More shifting.
0054   005F             
0055   005F FF FF FF FF 	.db -1>>1, -1>>30, -1>>31, -1>>32, -1>>33
0055   0063 FF 
0056   0064 FF 01 00    	.db $7FFFFFFF>>1, $7FFFFFFF>>30, $7FFFFFFF>>31
0057   0067 FF FF       	.db $7FFFFFFF>>32, $7FFFFFFF>>33
0058   0069 FF FF FF FF 	.db -1>>-1, -1>>-30, -1>>-31, -1>>-32, -1>>-33
0058   006D FF 
0059   006E 00 FF FF    	.db $7FFFFFFF>>-1, $7FFFFFFF>>-30, $7FFFFFFF>>-31
0060   0071 FF 00       	.db $7FFFFFFF>>-32, $7FFFFFFF>>-33
0061   0073 FF FF 01 01 	.db -1>>0, -1<<0, 1>>0, 1<<0
0062   0077             
0063   0077             ; Prefixes and suffixes
0064   0077             
0065   0077 00 00 00    	.db %0, 0b, 0B
0066   007A 01 01 01    	.db %1, 1b, 1B
0067   007D 00 00 00    	.db %00000000, 00000000b, 00000000B
0068   0080 FF FF FF    	.db %11111111, 11111111b, 11111111B
0069   0083 FF FF FF    	.db %111111111, 111111111b, 111111111B
0070   0086 AA AA AA    	.db %10101010, 10101010b, 10101010B
0071   0089             
0072   0089 00 00 00    	.db @0, 0o, 0O
0073   008C 01 01 01    	.db @1, 1o, 1O
0074   008F FF FF FF    	.db @377, 377o, 377O
0075   0092 3F 3F 3F    	.db @477, 477o, 477O
0076   0095 62 62 62    	.db @142, 142o, 142O
0077   0098             
0078   0098 00 00 01 01 	.db 0d, 0D, 1d, 1D
0079   009C FF FF 00 00 	.db 255d, 255D, 256d, 256D
0080   00A0 FF FF 80 80 	.db -1d, -1D, -128d, -128D
0081   00A4             
0082   00A4 00 00 00    	.db $0, 0h, 0H
0083   00A7 01 01 01    	.db $1, 1h, 1H
0084   00AA FF FF FF FF 	.db $ff, $FF, 0ffh, 0FFH
0085   00AE FF FF 00    	.db 0ffH, 0FFh, $100
0086   00B1 00 00       	.db 100h, 100H
0087   00B3 1E E1       	.db 1eH, 0E1h
0088   00B5             
0089   00B5 01 01       	.db 3%2, 3%%10
0090   00B7 48 00       	.db 255-$, 255-$ff
0091   00B9             
0092   00B9             ; DW, WORD
0093   00B9             
0094   00B9 00 00 FF 00 	.dw 0, 255, -255, 256
0094   00BD 01 FF 00 01 
0095   00C1 7F 00 80 00 	.dw 127, 128, -127, -128
0095   00C5 81 FF 80 FF 
0096   00C9 FF FF 00 00 	.dw 65535, 65536, -1, -65536
0096   00CD FF FF 00 00 
0097   00D1 FF FF FF 7F 	.dw -65537, 32767, 32768, -32767
0097   00D5 00 80 01 80 
0098   00D9 00 80       	.word -32768
0099   00DB 30 00 09 00 	.dw '0', '9'-'0', 'z'-'a', 'Z'-'A'
0099   00DF 19 00 19 00 
0100   00E3             
0101   00E3             ; BLOCK
0102   00E3             
0103   00E3             	.block -1
0104   00E2             	.block 1
0105   00E3             	.block 1
0106   00E4 02          	.db 2
0107   00E5             	.block -2
0108   00E3             	.block 2
0109   00E5             
0110   00E5             ; BYTE
0111   00E5             
0112   00E5 00 01 FF 00 	.byte 0, 1, 255, 256
0113   00E9 FF 80       	.byte -1, -128
0114   00EB             
0115   00EB             ; CODES, NOCODES
0116   00EB             
	.nocodes

; Printed as is --------

; Comment column 0

	.db 0, 1, 2, 3

; ----------------------

0127   00EF             	.codes
0128   00EF             
0129   00EF             ; Printed after line number, etc.
0130   00EF             
0131   00EF             ; ECHO accepted.
0132   00EF             
0133   00EF             	.echo "This is a string "
0134   00EF             	.echo 127+1
0135   00EF             	.echo " concatenated.\n"
0136   00EF             
0137   00EF             ; FILL .
0138   00EF             
0139   00EF             	.fill 0, 1
0140   00EF             	.fill 0, -1
0141   00EF             	.fill 0
0142   00EF 01          	.fill 1, 1
0143   00F0 FF          	.fill 1, -1
0144   00F1 FF          	.fill 1
0145   00F2 FF FF       	.fill 2
0146   00F4 FF FF FF    	.fill 3
0147   00F7 FF FF FF FF 	.fill 4
0148   00FB FF FF FF FF 	.fill 5
0148   00FF FF 
0149   0100 FF FF FF FF 	.fill 6
0149   0104 FF FF 
0150   0106 FF FF FF FF 	.fill 7
0150   010A FF FF FF 
0151   010D FF FF FF FF 	.fill 8
0151   0111 FF FF FF FF 
0152   0115 FF FF FF FF 	.fill 9
0152   0119 FF FF FF FF 
0152   011D FF 
0153   011E             
0154   011E             ; LIST, NOLIST
0155   011E             
0160   011E             	.list
0161   011E             
0162   011E             ; This appears.
0163   011E             
0164   011E             ; LSFIRST, MSFIRST
0165   011E             
0166   011E 34 12       	.word $1234
0167   0120             	.msfirst
0168   0120 12 34       	.word $1234
0169   0122             	.lsfirst
0170   0122 34 12       	.word $1234
0171   0124             
0172   0124             ; ORG simple.
0173   0124             
0174   0124             	.org $
0175   0125             	.org $+1
0176   0124             	.org $-1
0177   0125             	.org *+1
0178   0124             	.org *-1
0179   0124             
0180   0124             ; ORG forms.
0181   0124             
0182   0125             *=$+1
0183   0126             $=*+1
0184   0127             	*=*+1
0185   0128             	$=$+1
0186   0129             	$= $+1
0187   012A             	*= *+1
0188   012A             
0189   012A 80          	.db 128
0190   012B             
0191   012B             ; Testing * (current program counter) and multiply operator
0192   012B             
0193   012B 56          	.db **2
0194   012C             
0195   012C             ; Not correctly parsed by TASM.
0196   012C             
0197   012C             ;	.db ***
0198   012C             ;	.db 2**
0199   012C             
0200   012C             ; Test label in org: must take value after the org.
0201   012C             
0202   012C             orglab
0203   01AB             orglab1	.org $+127
0204   01AB AB 01       orglab2	.dw orglab1
0205   01AD             orglab3
0206   01AE             orglab4 .org $+1
0207   01AE 2C 01       	.dw orglab
0208   01B0 AD 01       	.dw orglab3
0209   01B2 AE 01       	.dw orglab4
0210   01B4             
0211   01B4             ; EQU
0212   01B4             
0213   01B4             label1		.equ 1
0214   01B4             label2:		.equ 2
0215   01B4             label3_		.equ 3
0216   01B4             label4_:	.equ 4
0217   01B4             label5		=5
0218   01B4             label6:		=6
0219   01B4             label7_		=7
0220   01B4             label8_:	=8
0221   01B4             label9.		=9
0222   01B4             labela.:	=10
0223   01B4             labelb		= 11
0224   01B4             
0225   01B4             ; PAGE/NOPAGE
0226   01B4             
0227   01B4             ; TEXT
0228   01B4             
0229   01B4 0A 0D 08 09 	.text "\n\r\b\t\f\\\""
0229   01B8 0C 5C 22 
0230   01BB 61 7A 41 5A 	.text "azAZ09"
0230   01BF 30 39 
0231   01C1 00 FF 5D    	.text "\000\377\135"
0232   01C4             
0233   01C4             ; DB, DW with text.
0234   01C4             
0235   01C4             	
0236   01C4 0A 0D 08 09 	.db "\n\r\b\t\f\\\""
0236   01C8 0C 5C 22 
0237   01CB 61 7A 41 5A 	.db "azAZ09"
0237   01CF 30 39 
0238   01D1 00 FF 5D    	.db "\000\377\135"
0239   01D4 0A 00 0D 00 	.dw "\n\r\b\t\f\\\""
0239   01D8 08 00 09 00 
0239   01DC 0C 00 5C 00 
0239   01E0 22 00 
0240   01E2 61 00 7A 00 	.dw "azAZ09"
0240   01E6 41 00 5A 00 
0240   01EA 30 00 39 00 
0241   01EE 00 00 5D 00 	.dw "\000\135"
0242   01F2 48 69 01 02 	.db "Hi", 1, 2, "Bye"
0242   01F6 42 79 65 
0243   01F9 48 00 69 00 	.dw "Hi", 1, 2, "Bye"
0243   01FD 01 00 02 00 
0243   0201 42 00 79 00 
0243   0205 65 00 
0244   0207             
0245   0207             ; This gives a different result in TASM.
0246   0207             
0247   0207             ;	.dw "\377"
0248   0207             
0249   0207             ; Mixed case directives.
0250   0207             
0251   0207 00          	.dB 0
0252   0208 01          	.Db 1
0253   0209             
0254   0209             ; Directives in column 0.
0255   0209             
0256   0209 02          .db 2
0257   020A 03          .dB 3
0258   020B 04          .DB 4
0259   020C             
0260   020C             ; Label names.
0261   020C             
0262   020C             _
0263   020C             L
0264   020C             _L9._
0265   020C             LL9._
0266   020C             la9._
0267   020C             l
0268   020C             
0269   020C             ; Line configurations.
0270   020C             
0271   020C             ; comment
0272   020C             	; comment
0273   020C             ;
0274   020C             	;
0275   020C             L10
0276   020C 00          L11	.db 0
0277   020D             L12	;comment
0278   020D 00          L13.db	.db 0
0279   020E             L14
0280   020E 00          L15	.db 0	; comment
0281   020F 00          L16	.db 0;comment
0282   0210             P10:
0283   0210 00          P11:	.db 0
0284   0211             P12:	;comment
0285   0211 00          P13.db:	.db 0
0286   0212             P14:
0287   0212 00          P15:	.db 0	; comment
0288   0213 00          P16:	.db 0;comment
0289   0214             
0290   0214             ; This should fail if uncommented.
0291   0214             
0292   0214             ;label12;comment
0293   0214             
0294   0214             ; Multiline scapes
0295   0214             
0296   0214 05          	.DB 5\ .DB 6\.DB 7
0296   0215 06          
0296   0216 07          
0297   0217             ML1	\ML2 .DB 1
0297   0217 01          
0298   0218             
0299   0218             ; Preprocessor
0300   0218             
0301   0218             #define Mm9._
0302   0218             #define _Mm9._
0303   0218             	#define MAC
0304   0218             ; #define MOC
0305   0218             #define ONE	1
0306   0218             #define TWO	(1+1)
0307   0218             
0308   0218             ; TASM allows for this
0309   0218             ; #define BAD%	3
0310   0218             ;	.db BAD%
0311   0218             
0312   0218             #define SUM1(n)	(n+ONE)
0313   0218             
0314   0218 06          	.db SUM1(5)
0315   0219             
0316   0219             #define MUL(a,b)	a * b
0317   0219             
0318   0219 1E          	.db MUL(5,6)
0319   021A             
0320   021A             #define VOID(a,b)
0321   021A             
0322   021A             VOID
0323   021A             VOID(5)
0324   021A             VOID(5,6)
0325   021A             
0326   021A             #define	ARG1(a,b,c)	a
0327   021A             
0328   021A 07          	.db ARG1(7)
0329   021B             
0330   021B             #define	ARG2(a,b,c)	b
0331   021B             
0332   021B 08          	.db ARG2(1,8)
0333   021C             
0334   021C             ; TASM doesn't allow _a, _7 _. for arguments
0335   021C             ; #define ALLOW(a,ab,_a,_7,_.)	a+ab+_a+_7+_.
0336   021C             ;	.db ALLOW(1,2,3,4,5)
0337   021C             
0338   021C             #define ALLOW(a,a7,a7b7)	a+a7+a7b7
0339   021C             
0340   021C 06          	.db ALLOW(1,2,3)
0341   021D 06          	.db ALLOW( 1 , 2 , 3 )
0342   021E             
0343   021E             #define CONT	5+
0344   021E             #defcont	6+
0345   021E             #defcont	7
0346   021E             
0347   021E 12          	.db CONT
0348   021F             
0349   021F             #define	MULTILINE	.DB 1\ .DB 2\
0350   021F             #defcont		.DB 3\
0351   021F             #defcont		.DB 4
0352   021F             
0353   021F 01          	MULTILINE
0353   0220 02          
0353   0221 03          
0353   0222 04          
0354   0223             
0355   0223             #define INCL
0356   0223             
0357   0223             #ifdef INCL
0358   0223 01          	.db 1
0359   0224             #endif
0360   0224~            #ifndef INCL
0361   0224~            	.db 2
0362   0224             #endif
0363   0224             #ifdef INCL
0364   0224 08          	.db 8
0365   0225~            #else
0366   0225~            	.db 16
0367   0225             #endif
0368   0225~            #ifndef INCL
0369   0225~            	.db 32
0370   0225             #else
0371   0225 40          	.db 64
0372   0226             #endif
0373   0226             
0374   0226~            #ifdef NINCL
0375   0226~            	.db 1
0376   0226             #endif
0377   0226             #ifndef NINCL
0378   0226 02          	.db 2
0379   0227             #endif
0380   0227~            #ifdef NINCL
0381   0227~            	.db 8
0382   0227             #else
0383   0227 10          	.db 16
0384   0228             #endif
0385   0228             #ifndef NINCL
0386   0228 20          	.db 32
0387   0229~            #else
0388   0229~            	.db 64
0389   0229             #endif
0390   0229             
0391   0229             #ifdef INCL
0392   0229~            	#ifdef NINCL
0393   0229~            		.db 1
0394   0229             	#else
0395   0229 02          		.db 2
0396   022A             	#endif
0397   022A             	#ifndef NINCL
0398   022A 04          		.db 4
0399   022B~            	#else
0400   022B~            		.db 8
0401   022B             	#endif
0402   022B~            #else
0403   022B~            	#ifdef NINCL
0404   022B~            		.db 16
0405   022B~            	#else
0406   022B~            		.db 32
0407   022B~            	#endif
0408   022B~            	#ifndef NINCL
0409   022B~            		.db 64
0410   022B~            	#else
0411   022B~            		.db 128
0412   022B~            	#endif
0413   022B             #endif
0414   022B             
0415   022B~            #ifndef INCL
0416   022B~            	#ifdef NINCL
0417   022B~            		.db 1
0418   022B~            	#else
0419   022B~            		.db 2
0420   022B~            	#endif
0421   022B~            	#ifndef NINCL
0422   022B~            		.db 4
0423   022B~            	#else
0424   022B~            		.db 8
0425   022B~            	#endif
0426   022B             #else
0427   022B~            	#ifdef NINCL
0428   022B~            		.db 16
0429   022B             	#else
0430   022B 20          		.db 32
0431   022C             	#endif
0432   022C             	#ifndef NINCL
0433   022C 40          		.db 64
0434   022D~            	#else
0435   022D~            		.db 128
0436   022D             	#endif
0437   022D             #endif
0438   022D             
0439   022D             prgend	.end	prgend
